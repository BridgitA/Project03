{"version":3,"sources":["actions/index.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","connect","input","dispatch","onSubmit","e","text","preventDefault","value","trim","type","id","placeholder","ref","el","Todo","onClick","completed","TodoList","todos","toggleTodo","map","todo","getVisibleTodos","filter","task","Error","state","visibilityFilter","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"6LAAIA,EAAa,EAOJC,EACJ,MADIA,EAED,SAFCA,EAGE,YCmBAC,qBAzBf,YAA8B,IACtBC,EADUC,EAAW,EAAXA,SAEd,OACI,6BACI,0BACIC,SACI,SAAAC,GDRG,IAAAC,GCSCD,EAAEE,iBAEGL,EAAMM,MAAMC,UAIjBN,GDfDG,ECekBJ,EAAMM,MDff,CAC5BE,KAAM,WACNC,GAAIZ,IACJO,UCaoBJ,EAAMM,MAAQ,MAItB,2BAAOE,KAAO,OAAOE,YAAc,UAAUC,IAAO,SAAAC,GAAE,OAAKZ,EAAQY,KACnE,4BAAQJ,KAAO,UAAf,YCdDK,MAPf,YACI,OADsC,EAA3BC,QAA2B,EAAlBC,UAAkB,EAAPX,KAE3B,qCCUOY,MAVf,YAA0C,IAAtBC,EAAqB,EAArBA,MAChB,OADqC,EAAdC,WAEnB,4BACKD,EAAME,KAAI,SAAAC,GAAI,OACX,kBAAC,EAAD,WCJVC,EAAkB,SAACJ,EAAOK,GAC5B,OAAQA,GACJ,KAAKxB,EACD,OAAOmB,EACX,KAAKnB,EACD,OAAOmB,EAAMK,QAAO,SAAAC,GAAI,OAAKA,EAAKR,aACtC,KAAKjB,EACD,OAAOmB,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKR,aACrC,QACI,MAAM,IAAIS,MAAM,mBAAqBF,KASlCvB,eALS,SAAA0B,GAAK,MAAK,CAC9BR,MAAOI,EAAgBI,EAAMR,MAAOQ,EAAMC,qBAI/B3B,CAEbiB,GCXaW,MATf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAACC,EAAD,Q,cCSGX,MAhBf,WAAoC,IAArBQ,EAAoB,uDAAZ,GAAII,EAAQ,uCAC/B,OAAQA,EAAOrB,MACX,IAAK,WACD,MAAM,GAAN,mBACOiB,GADP,CAEI,CACIhB,GAAIoB,EAAOpB,GACXL,KAAMyB,EAAOzB,KACbW,WAAU,KAGtB,QACI,OAAOU,ICDJC,EAVU,WAA4C,IAA3CD,EAA0C,uDAAlC3B,EAAuB+B,EAAW,uCAChE,OAAQA,EAAOrB,MACX,IAAK,wBACD,OAAOqB,EAAOP,OAClB,QACI,OAAOG,ICFJK,cAAgB,CAC3Bb,QACAS,qBCAEK,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAUA,GAClB,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.c455dbaa.chunk.js","sourcesContent":["let nextTodoId = 0;\n\nexport const addTodo = text => ({\n    type: 'ADD_TODO',\n    id: nextTodoId++,\n    text\n});\nexport const VisibilityFilters = {\n    All: 'All',\n    Active: 'Active',\n    Completed: 'Completed'\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nfunction AddTodo({dispatch}) {\n    let input;\n    return(\n        <div>\n            <form\n                onSubmit= {\n                    e => {\n                        e.preventDefault();\n\n                        if (!input.value.trim()) {\n                            return\n                        }\n\n                        dispatch(addTodo(input.value));\n                        input.value = '';\n                    }\n                }\n            >\n                <input type = 'text' placeholder = 'Task...' ref = {el => (input = el)} />\n                <button type = 'submit'>Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(AddTodo);","import React from 'react'\n\nfunction Todo({onClick, completed, text}) {\n    return(\n        <li>Task</li>\n    )\n\n}\n\nexport default Todo;","import React from 'react'\nimport Todo from './Todo'\n\n\nfunction TodoList({ todos, toggleTodo }) {\n    return(\n        <ul>\n            {todos.map(todo => (\n                <Todo />\n            ))}\n        </ul>\n    )\n}\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { VisibilityFilters } from '../actions'\nimport TodoList from '../components/TodoList'\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n        case VisibilityFilters.All:\n            return todos;\n        case VisibilityFilters.Active:\n            return todos.filter(task => !task.completed);\n        case VisibilityFilters.Completed:\n            return todos.filter(task => task.completed); \n        default:\n            throw new Error('Unknown Filter: ' + filter);           \n    }\n}\n\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\n\nexport default connect(\n    mapStateToProps\n)(TodoList);","import React from 'react';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleTodoList from '../containers/VisibleTodoList.js'\n\nfunction App(){\n    return(\n        <div>\n            <AddTodo />\n            <VisibleTodoList />\n        </div>\n    )\n}\n\nexport default App","\nfunction todos(state = [], action) {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state, \n                {\n                    id: action.id,\n                    text: action.text,\n                    completed:false\n                }\n            ];\n        default:\n            return state;           \n    }\n}\n\nexport default todos;","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = VisibilityFilters.All, action) => {\n    switch (action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter;\n        default:\n            return state;    \n    }\n}\n\n\nexport default visibilityFilter;","import {combineReducers} from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\n\n\nexport default combineReducers({\n    todos,\n    visibilityFilter\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}